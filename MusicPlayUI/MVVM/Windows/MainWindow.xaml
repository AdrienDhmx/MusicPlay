<Window x:Class="MusicPlayUI.MVVM.Views.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:modal="clr-namespace:Modal;assembly=Modal" 
        xmlns:views="clr-namespace:MusicPlayUI.MVVM.Views" 
        xmlns:animation="clr-namespace:MusicPlayUI.Animations" 
        xmlns:popupviews="clr-namespace:MusicPlayUI.MVVM.Views.PopupViews" 
        xmlns:playercontrolviews="clr-namespace:MusicPlayUI.MVVM.Views.PlayerControlViews"
        xmlns:viewmodels="clr-namespace:MusicPlayUI.MVVM.ViewModels"
        xmlns:helper="clr-namespace:MusicPlayUI.Core.Helpers"
        xmlns:iconbtn="clr-namespace:IconButton;assembly=IconButton"
        xmlns:messagehelper="clr-namespace:MessageControl;assembly=MessageControl"
        xmlns:command="clr-namespace:MusicPlayUI.Core.Commands" 
        xmlns:appBar="clr-namespace:MusicPlayUI.MVVM.Views.AppBars" 
        xmlns:mp="clr-namespace:ModalPopupControl;assembly=ModalPopupControl"
        mc:Ignorable="d"
        ResizeMode="CanResize"
        WindowStyle="SingleBorderWindow"
        WindowStartupLocation="CenterScreen"
        WindowState="Maximized"
        Background="{DynamicResource Background}"
        Height="750" 
        Width="1000"
        MinWidth="800"
        MinHeight="650"
        Title="{Binding QueueService.Queue.PlayingTrack.Title, Converter={StaticResource AddTextConverter}, ConverterParameter='MusicPlay -'}"
        x:Name="Root"
        d:DataContext="{d:DesignInstance Type=viewmodels:MainViewModel}">

        <!-- Main Grid -->
    <Grid x:Name="RootGrid"
                ClipToBounds="True"
                ShowGridLines="False"
                SnapsToDevicePixels="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <appBar:AppBarView DataContext="{Binding AppState.AppBar}"
                           VerticalAlignment="Top"
                           Grid.ColumnSpan="2"
                            ClipToBounds="False"
                            Panel.ZIndex="10"/>

        <!-- Menu -->
        <Border x:Name="MenuBorder"
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Panel.ZIndex="12"
                    Background="Transparent"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Stretch">
            <Border.Effect>
                <DropShadowEffect BlurRadius="10" 
                            Color="#000000"
                            Opacity="0.4"
                            Direction="-90"/>
            </Border.Effect>
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <TranslateTransform X="-60"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Width" Value="0"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding AppState.IsMenuDrawerOpen}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                                From="-60" To="0"
                                                                Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Width"
                                                                From="0" To="60"
                                                                Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                                From="0" To="-40"
                                                                Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Width"
                                                              From="40" To="0"
                                                              Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <views:MainMenuView DataContext="{Binding CurrentMenu}"/>
        </Border>

        <!-- MainContent -->
        <Border Grid.Column="1"
                x:Name="MainContentBorder">
            <ContentControl Content="{Binding AppState.CurrentView.ViewModel}"
                                Style="{DynamicResource Basestyle}"
                                x:Name="MainContent"/>
        </Border>


        <!-- Music Player Control -->
        <Border Grid.Row="1"
                    VerticalAlignment="Bottom"
                    Grid.ColumnSpan="3"
                    ClipToBounds="False"
                    Panel.ZIndex="200"
                    Visibility="{Binding AppState.IsFullScreen, Converter={StaticResource BoolToVisibilityConverterInverted}}">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Height" Value="0"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding QueueService.Queue.PlayingTrack, Converter={StaticResource IsNullConverter}}" Value="False">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Height"
                                                                From="0" To="100"
                                                                Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Height"
                                                                From="100" To="0"
                                                                Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Border.Effect>
                <DropShadowEffect BlurRadius="10" 
                            Color="#000000"
                            Opacity="0.8"
                            Direction="200"/>

            </Border.Effect>
            <playercontrolviews:PlayerControlView DataContext="{Binding CurrentPlayerControl}">
            </playercontrolviews:PlayerControlView>
        </Border>

        <!-- Queue Drawer -->
        <Grid Grid.Column="1"
            Margin="0, 0, 20, 0"
              Panel.ZIndex="4"
            HorizontalAlignment="Right">
            <Grid.RowDefinitions>
                <RowDefinition Height="110"/>
                <!-- Empty row to let space above the drawer -->
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Border Grid.Row="1"
                        Width="360">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <TranslateTransform Y="800"/>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding AppState.IsQueueDrawerOpen}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                                                From="800" To="0"
                                                                Duration="0:0:0.6" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                                                From="0" To="800"
                                                                Duration="0:0:0.6" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Border.Effect>
                    <DropShadowEffect BlurRadius="12" ShadowDepth="2" Color="Black"
                                    Direction="250"
                                    Opacity="0.8"/>
                </Border.Effect>
                <popupviews:QueueDrawerView DataContext="{Binding QueueDrawer}"/>
            </Border>
        </Grid>

        <!-- Message Popup -->
        <ScrollViewer VerticalScrollBarVisibility="Hidden" 
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            Style="{DynamicResource Basestyle}"
                            Grid.Column="1"
                      Panel.ZIndex="100">
            <StackPanel VerticalAlignment="Top" 
                        Margin="0,20,10,10"
                        messagehelper:MessageHelper.IsMessagesContainer="True"/>
        </ScrollViewer>

        <!-- Modal (playlist creation and edit + verif message) -->
        <modal:Modal Grid.ColumnSpan="2"
                            Grid.RowSpan="3"
                            Margin="0"
                            CornerRadius="{DynamicResource SecondaryCornerRadius}"
                            Panel.ZIndex="999"
                            BorderThickness="0"
                            BorderBrush="{DynamicResource SurfaceVariant}"
                            IsOpen="{Binding ModalService.IsModalOpen}"
                            Content="{Binding ModalService.Modal, UpdateSourceTrigger=PropertyChanged}"
                            Background="{DynamicResource BlackTransparent}"/>


        <!-- Popup Views -->
        <mp:ModalPopup Placement="MousePoint"
                        StaysOpen="False"
                        HorizontalOffset="5"
                        VerticalOffset="5"
                        PopupAnimation="Fade"
                        ClipToBounds="false"
                        Panel.ZIndex="80"
                           Effect="{DynamicResource FilterPanelDropShadow}"
                        IsOpen="{Binding AppState.IsPopupOpen}"
                         AllowsTransparency="True">
            <ContentControl Content="{Binding AppState.CurrentPopup.ViewModel}"
                                Margin="24"
                         ClipToBounds="false"
                         Background="{DynamicResource Background}"
                                Effect="{DynamicResource PopupDropShadow}">
            </ContentControl>
        </mp:ModalPopup>
    </Grid>
</Window>
