<UserControl x:Class="MusicPlayUI.MVVM.Views.Templates.TextPreviewTemplate"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MusicPlayUI.MVVM.Views.Templates" xmlns:markdownviewercontrol="clr-namespace:MarkdownViewerControl;assembly=MarkdownViewerControl"
             mc:Ignorable="d" 
             x:Name="TextPreviewTemplateRoot"
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid Name="PreviewGridRoot"
          ShowGridLines="False">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Border x:Name="TextContainer"
                ClipToBounds="True"
                Margin="0, 0, 0, 2"
                VerticalAlignment="Top">
            <markdownviewercontrol:MarkdownViewer Name="markdownViewer"
                                                  LinkColor="{DynamicResource Primary}"
                                                  Foreground="{DynamicResource OnSurfaceVariant}"
                                                  Header1Foreground="{DynamicResource OnBackground}"
                                                  Header2Foreground="{DynamicResource OnBackground}"
                                                  Header3Foreground="{DynamicResource OnBackground}"
                                                  Header4Foreground="{DynamicResource OnBackground}"
                                                  Header5Foreground="{DynamicResource OnBackground}"
                                                  Header6Foreground="{DynamicResource OnBackground}"
                                                  TextTrimming="None"/>
        </Border>

        <Border Name="CacheBorder"
                ClipToBounds="True"
                VerticalAlignment="Bottom"
                Background="{DynamicResource Background}">
            <Border.OpacityMask>
                <LinearGradientBrush StartPoint="0, 0"
                                     EndPoint="0, 1">
                    <GradientStop Color="#00000000" Offset="0" />
                    <GradientStop Color="#40000000" Offset="0.78" />
                    <GradientStop Color="#bb000000" Offset="0.84" />
                    <GradientStop Color="#ff000000" Offset="0.96" />
                </LinearGradientBrush>
            </Border.OpacityMask>
        </Border>

        <Border HorizontalAlignment="Stretch"
                ClipToBounds="True"
                IsHitTestVisible="true"
                Background="Transparent"
                Cursor="Hand"
                Grid.Row="1"
                Padding="8, 4"
               Name="ExtendButton">
            <Path Data="{DynamicResource CollapseArrow}"
                    Width="18"
                    Height="12"
                    Stretch="Fill"
                  x:Name="ExtendBtnIcon">
                <Path.Style>
                    <Style TargetType="Path">
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <RotateTransform x:Name="noFreeze" Angle="0" CenterX="10" CenterY="7"/>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Fill" Value="{DynamicResource OnBackground}" />
                        <Setter Property="Opacity" Value="0.8" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=ExtendButton}" Value="True">
                                <Setter Property="Fill" Value="{DynamicResource Primary}"/>
                                <Setter Property="Opacity" Value="1" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsExtended, ElementName=TextPreviewTemplateRoot}" Value="False">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                                            To="180" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                             To="0" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Path.Style>
            </Path>
        </Border>

    </Grid>
</UserControl>
