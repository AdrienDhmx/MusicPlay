<UserControl x:Class="MusicPlayUI.MVVM.Views.PlayerControlViews.NowPlayingPlayerControlView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MusicPlayUI.MVVM.Views.PlayerControlViews" 
             xmlns:iconbtn="clr-namespace:IconButton;assembly=IconButton"
             xmlns:lang="clr-namespace:MusicPlay.Language;assembly=MusicPlay.Language"
             xmlns:helper="clr-namespace:MusicPlayUI.Core.Helpers" 
             xmlns:playercontrolviewmodels="clr-namespace:MusicPlayUI.MVVM.ViewModels.PlayerControlViewModels" 
             d:DataContext="{d:DesignInstance Type=playercontrolviewmodels:NowPlayingPlayerControlViewModel}"
             x:Name="RootView"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    
    <Grid HorizontalAlignment="Stretch"
          MaxWidth="550"
          VerticalAlignment="Center"
          Margin="5,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <!-- Controls -->
        <StackPanel Orientation="Horizontal"
                    Margin="0,5,0,10"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center">
            <!-- Shuffle -->
            <iconbtn:IconButton Icon="{DynamicResource ShuffleIcon}"
                                        Command="{Binding ShuffleCommand}">
                <iconbtn:IconButton.Style>
                    <Style TargetType="iconbtn:IconButton"
                                   BasedOn="{StaticResource ThirdPlayBackButton}">
                        <Setter Property="FillColor" Value="{DynamicResource WhiteForeground}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DataContext.QueueService.IsShuffled, ElementName=RootView}" Value="true">
                                <Setter Property="Background" Value="{DynamicResource ScdWhiteTransparent}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </iconbtn:IconButton.Style>
            </iconbtn:IconButton>

            <!-- Previous Track -->
            <iconbtn:IconButton  Style="{DynamicResource ScdPlayBackButton}"
                                 FillColor="{DynamicResource WhiteForeground}"
                                         Icon="{DynamicResource PreviousIcon}"
                                         Command="{Binding PreviousTrackCommand}">
            </iconbtn:IconButton>

            <!-- Play/Pause -->
            <iconbtn:IconButton Command="{Binding PlayPauseCommand}"
                                FillColor="{DynamicResource WhiteForeground}">
                <iconbtn:IconButton.Style>
                    <Style BasedOn="{StaticResource PlayBackButton}" 
                                   TargetType="iconbtn:IconButton">
                        <Setter Property="Icon" Value="{DynamicResource PlayIcon}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DataContext.AudioPlayback.IsPlaying, ElementName=RootView}" Value="true">
                                <Setter Property="Icon" Value="{DynamicResource PauseIcon}"/>
                                <Setter Property="ToolTip" Value="{x:Static lang:Resources.Pause}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </iconbtn:IconButton.Style>
            </iconbtn:IconButton>

            <!-- Next Track -->
            <iconbtn:IconButton  Style="{DynamicResource ScdPlayBackButton}"
                                 FillColor="{DynamicResource WhiteForeground}"
                                         Icon="{DynamicResource NextIcon}"
                                         Command="{Binding NextTrackCommand}">
            </iconbtn:IconButton>

            <!-- Repeat/Repeat One -->
            <iconbtn:IconButton Command="{Binding RepeatCommand}">
                <iconbtn:IconButton.Style>
                    <Style TargetType="iconbtn:IconButton"
                                   BasedOn="{StaticResource ThirdPlayBackButton}">
                        <Setter Property="FillColor" Value="{DynamicResource WhiteForeground}"/>
                        <Setter Property="Icon" Value="{DynamicResource RepeatIcon}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DataContext.QueueService.IsOnRepeat, ElementName=RootView}" Value="true">
                                <Setter Property="Background" Value="{DynamicResource ScdWhiteTransparent}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DataContext.AudioPlayback.IsLooping, ElementName=RootView}" Value="true">
                                <Setter Property="Icon" Value="{DynamicResource RepeatOneIcon}"/>
                                <Setter Property="Background" Value="{DynamicResource ScdWhiteTransparent}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </iconbtn:IconButton.Style>
            </iconbtn:IconButton>
        </StackPanel>

        <!-- Audio Position -->
        <Grid Grid.Row="1"
                      Margin="0,0,0,10"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="{Binding AudioService.CurrentPosition}"
                               Foreground="{DynamicResource WhiteForeground}"
                               FontSize="14"
                               Margin="0,0,4,0"/>

            <!-- Audio Slider -->
            <Slider Grid.Column="1"
                    Style="{DynamicResource NPSlider}"
                            HorizontalAlignment="Stretch"
                             VerticalAlignment="Center"
                    Foreground="{DynamicResource ScdWhiteTransparent}"
                    Background="{DynamicResource ScdWhiteTransparent}"
                            Value="{Binding AudioService.CurrentPositionMs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Minimum="0"
                            Maximum="{Binding AudioService.MaxPositionMs}"
                             IsMoveToPointEnabled="True"
                            helper:SliderDragHelper.IsDragEnabled="True"
                            helper:SliderDragHelper.DragTarget="{Binding AudioService}">
            </Slider>

            <TextBlock Text="{Binding QueueService.PlayingTrack.Duration}"
                               Foreground="{DynamicResource WhiteForeground}"
                               FontSize="14"
                               Margin="4,0,0,0"
                               Grid.Column="2"/>
        </Grid>
    </Grid>
</UserControl>
