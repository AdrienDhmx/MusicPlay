<UserControl x:Class="MusicPlayUI.MVVM.Views.PopupViews.QueueDrawerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MusicPlayUI.MVVM.Views.PopupViews"
             xmlns:popupviewmodels="clr-namespace:MusicPlayUI.MVVM.ViewModels.PopupViewModels"
             xmlns:customButton="clr-namespace:IconButton;assembly=IconButton" 
             xmlns:dd="urn:gong-wpf-dragdrop"
             xmlns:model="clr-namespace:MusicPlayUI.MVVM.Models"
             xmlns:vcontrol="clr-namespace:VirtualizingControls;assembly=VirtualizingControls" xmlns:ListView="clr-namespace:MusicPlayUI.MVVM.Views.ListViews"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=popupviewmodels:QueueDrawerViewModel}"
             x:Name="RootQueuePopupView"
             d:DesignHeight="800" d:DesignWidth="800">
    <Border x:Name="RootBorder"
            CornerRadius="10,10,0,0"
            Background="{DynamicResource Background}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Playing From -->
            <TextBlock Text="{Binding QueueService.PlayingFrom.PlayingFrom, UpdateSourceTrigger=PropertyChanged}"
                       Style="{DynamicResource SLlistInfoStyle}"
                       HorizontalAlignment="Center"
                       TextAlignment="Center"
                       MaxHeight="80"
                       FontSize="24"
                       Margin="20, 16">
                <TextBlock.InputBindings>
                    <MouseBinding Gesture="LeftClick" Command="{Binding NavigateToPlayingFromCommand}"/>
                </TextBlock.InputBindings>
            </TextBlock>

            <!-- Queue Tracks -->
            <vcontrol:VirtualizingListView x:Name="QueueTracks"
                                               Grid.Row="1"
                                           Style="{DynamicResource QueueListView}"
                          Margin="5, 0"
                          dd:DragDrop.IsDragSource="True"
                         dd:DragDrop.IsDropTarget="True"
                         dd:DragDrop.DropHandler="{Binding QueueService}"
                          dd:DragDrop.DropScrollingMode="VerticalOnly"
                          dd:DragDrop.DropTargetScrollViewer="{Binding ElementName=QueueTracks, Converter={StaticResource FindScrollViewerConverter}}"
                          dd:DragDrop.DropTargetAdornerBrush="{DynamicResource Primary}"
                          HorizontalAlignment="Stretch"
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                        ItemsSource="{Binding QueueService.QueueTracks, UpdateSourceTrigger=PropertyChanged}"
                        SelectedItem="{Binding QueueService.PlayingTrack, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                          ItemContainerStyle="{DynamicResource QueuePopupListViewItem}"
                          ScrollViewer.CanContentScroll="True"
                        SelectionMode="Single">
                    <dd:DragDrop.EffectMoveAdornerTemplate>
                        <DataTemplate DataType="{x:Type model:UIOrderedTrackModel}">
                            <Border Background="{DynamicResource Background}"
                                    BorderBrush="{DynamicResource Outline}"
                                    BorderThickness="1"
                                   CornerRadius="{DynamicResource PrimaryCornerRadius}"
                                    Width="300">
                                <Grid Margin="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="60"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Border CornerRadius="{DynamicResource PrimaryCornerRadius}"
                                            Height="60"
                                            Width="60">
                                        <Border.Background>
                                            <ImageBrush ImageSource="{Binding Cover, Converter={StaticResource ONullImageConverter}}"/>
                                        </Border.Background>
                                    </Border>

                                <!-- Title & Artists -->
                                <StackPanel HorizontalAlignment="Stretch"
                                                VerticalAlignment="Center"
                                                Margin="8,0"
                                                Grid.Column="1">

                                    <TextBlock Text="{Binding Title}"
                                                   Style="{DynamicResource SStyle}"
                                                   MaxHeight="40"
                                                   HorizontalAlignment="Stretch"/>

                                    <ListView:TrackArtistsListView Artists="{Binding Artists}"
                                                                   Foreground="{DynamicResource OnBackground}"/>
                                </StackPanel>
                            </Grid>
                            </Border>
                        </DataTemplate>
                    </dd:DragDrop.EffectMoveAdornerTemplate>
                    <vcontrol:VirtualizingListView.ItemTemplate>
                        <DataTemplate>
                            <Border x:Name="RootItemBorder"
                                    IsHitTestVisible="true"
                                    Background="Transparent">
                                <Border.InputBindings>
                                    <MouseBinding Gesture="RightClick"
                                                  Command="{Binding DataContext.OpenTrackPopupCommand, ElementName=RootQueuePopupView}"
                                                  CommandParameter="{Binding .}"/>
                                </Border.InputBindings>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>   

                                    <customButton:IconButton Style="{DynamicResource QueueQuickPlayButton}"
                                                            Command="{Binding DataContext.PlayTrackCommand, ElementName=RootQueuePopupView}"
                                                             CommandParameter="{Binding .}"
                                                            Panel.ZIndex="2"
                                                            VerticalAlignment="Center"
                                                            HorizontalAlignment="Center"
                                                            Visibility="{Binding IsMouseOver, ElementName=RootItemBorder, Converter={StaticResource BoolToVisibilityConverter}}"
                                                            x:Name="PlayBtn"/>
                                    <!-- Album Cover -->
                                    <Border CornerRadius="4"
                                            Margin="4"
                                            Visibility="{Binding DataContext.QueueService.AreCoversEnabled, ElementName=RootQueuePopupView, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneTime}"
                                            Width="60"
                                            Height="60"
                                            VerticalAlignment="Center"
                                            x:Name="CoverBorder">
                                        <Border.Background>
                                            <ImageBrush ImageSource="{Binding Cover, Converter={StaticResource ONullImageConverter}}"
                                                            Stretch="UniformToFill"/>
                                        </Border.Background>
                                    </Border>

                                    <!-- Title & Album -->
                                <StackPanel HorizontalAlignment="Stretch"
                                                VerticalAlignment="Top"
                                            ClipToBounds="false"
                                                Margin="8,4"
                                                Grid.Column="1">

                                    <TextBlock Text="{Binding Title}"
                                                   Style="{DynamicResource SStyle}"
                                                   MaxHeight="40"
                                                   HorizontalAlignment="Stretch"/>

                                    <ListView:TrackArtistsListView Artists="{Binding Artists}" 
                                                                   FontSize="15"
                                                                Foreground="{DynamicResource OnBackground}"
                                                                   Command="{Binding DataContext.NavigateToArtistCommand, ElementName=RootQueuePopupView}"/>

                                </StackPanel>

                                    <!-- Remove from queue button -->
                                    <customButton:IconButton Grid.Column="2"
                                                             x:Name="RemoveTrackButton"
                                                             Background="{DynamicResource PrimaryContainer}"
                                                             CornerRadius="6"
                                                             Icon="{DynamicResource close}"
                                                             Width="40"
                                                             Height="{Binding ActualHeight, ElementName=RootItemBorder}"
                                                             IconWidth="15"
                                                             IconHeight="15"
                                                             IconMargin="0, 0, 8, 0"
                                                             IconStretch="Uniform"
                                                             VerticalAlignment="Center"
                                                             HorizontalAlignment="Right"
                                                             HorizontalContentAlignment="Right"
                                                             StrokeColor="Transparent"
                                                             Command="{Binding DataContext.RemoveTrackCommand, ElementName=RootQueuePopupView}"
                                                             CommandParameter="{Binding .}">
                                    <customButton:IconButton.Style>
                                        <Style TargetType="customButton:IconButton"
                                                   BasedOn="{StaticResource BaseIconButton}">
                                            <Setter Property="FillColor" Value="{DynamicResource OnSurfaceVariant}"/>
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="FillColor" Value="{DynamicResource OnBackground}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </customButton:IconButton.Style>
                                    <customButton:IconButton.OpacityMask>
                                        <LinearGradientBrush StartPoint="0, 0.5"
                                                               EndPoint="1, 0.5">
                                            <GradientStop Color="#10000000" Offset="0"/>
                                            <GradientStop Color="#60000000" Offset="0.1"/>
                                            <GradientStop Color="#a0000000" Offset="0.2"/>
                                            <GradientStop Color="#ff000000" Offset="0.3"/>
                                        </LinearGradientBrush>
                                    </customButton:IconButton.OpacityMask>
                                </customButton:IconButton>
                                </Grid>
                            </Border>
                            <DataTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True" SourceName="RootItemBorder">
                                    <Setter Property="Opacity" Value="0.6" TargetName="CoverBorder"/>
                                <Setter Property="Visibility" Value="Visible" TargetName="RemoveTrackButton"/>
                            </Trigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </vcontrol:VirtualizingListView.ItemTemplate>
                </vcontrol:VirtualizingListView>

            <Border Background="{DynamicResource BlackGradient}"
                    IsHitTestVisible="False"
                    Grid.Row="1"
                    Height="10"
                    Opacity="0.8"
                    ClipToBounds="True"
                    VerticalAlignment="Top">
                <Border.OpacityMask>
                    <LinearGradientBrush  StartPoint="0,1"
                                          EndPoint="0,0">
                        <GradientStop Color="#00000000" Offset="0"/>
                        <GradientStop Color="#10000000" Offset="0.2"/>
                        <GradientStop Color="#25000000" Offset="0.4"/>
                        <GradientStop Color="#38000000" Offset="0.6"/>
                        <GradientStop Color="#5a000000" Offset="0.8"/>
                        <GradientStop Color="#5f000000" Offset="1"/>
                    </LinearGradientBrush>
                </Border.OpacityMask>
            </Border>

            <Border Background="{DynamicResource BlackGradient}"
                    IsHitTestVisible="False"
                    Grid.Row="1"
                    Height="10"
                    Opacity="1"
                    Panel.ZIndex="2"
                    ClipToBounds="True"
                    VerticalAlignment="Bottom">
                <Border.OpacityMask>
                    <LinearGradientBrush  StartPoint="0,1"
                                          EndPoint="0,0">
                        <GradientStop Color="#00000000" Offset="1"/>
                        <GradientStop Color="#10000000" Offset="0.8"/>
                        <GradientStop Color="#25000000" Offset="0.6"/>
                        <GradientStop Color="#38000000" Offset="0.4"/>
                        <GradientStop Color="#5a000000" Offset="0.2"/>
                        <GradientStop Color="#5f000000" Offset="0"/>
                    </LinearGradientBrush>
                </Border.OpacityMask>
            </Border>
            
            <StackPanel Grid.Row="1"
                        Margin="0,0,40,10"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        Orientation="Horizontal"
                        Panel.ZIndex="1">

                <customButton:IconButton Icon="{DynamicResource PlaylistLibrary}"
                                             Style="{DynamicResource PlaylistIconButton}"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Bottom"
                                            Command="{Binding SaveQueueAsPlaylistCommand}">
                    <customButton:IconButton.Effect>
                        <DropShadowEffect BlurRadius="10" 
                                          Color="#101010"
                                           Opacity="0.2"
                                          Direction="290"/>
                    </customButton:IconButton.Effect>
                </customButton:IconButton>
            </StackPanel>
        </Grid>
    </Border>
</UserControl>
