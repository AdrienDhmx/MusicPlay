<UserControl x:Class="MusicPlayUI.MVVM.Views.PopupViews.QueueDrawerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:popupviewmodels="clr-namespace:MusicPlayUI.MVVM.ViewModels.PopupViewModels"
             xmlns:customButton="clr-namespace:IconButton;assembly=IconButton" 
             xmlns:dd="urn:gong-wpf-dragdrop"
             xmlns:model="clr-namespace:MusicPlay.Database.Models.DataBaseModels;assembly=MusicPlay.Database"
             xmlns:ListView="clr-namespace:MusicPlayUI.MVVM.Views.ListViews" 
             xmlns:asyncImage="clr-namespace:MusicPlayUI.Controls"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=popupviewmodels:QueueDrawerViewModel}"
             x:Name="RootQueuePopupView"
             d:DesignHeight="800" d:DesignWidth="800">
    
    <Border x:Name="RootBorder"
            CornerRadius="10,10,0,0"
            Background="{DynamicResource Background}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <!-- Playing From -->
                <TextBlock Text="{Binding QueueService.Queue.PlayingFromName, UpdateSourceTrigger=PropertyChanged}"
                           Style="{DynamicResource SLlistInfoStyle}"
                           HorizontalAlignment="Center"
                           TextAlignment="Center"
                           MaxHeight="80"
                           FontSize="24"
                           Margin="20, 16">
                    <TextBlock.InputBindings>
                        <MouseBinding Gesture="LeftClick" Command="{Binding NavigateToPlayingFromCommand}"/>
                    </TextBlock.InputBindings>
                </TextBlock>

                <StackPanel Grid.Row="1" 
                            Margin="10, 6"
                            Orientation="Horizontal"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left">
                    <TextBlock  Style="{DynamicResource NLargeStyle}"
                                Text="{Binding SelectedIndex, ElementName=QueueTracks, Converter={StaticResource  AdditionConverter}, ConverterParameter=1}"/>
                    <TextBlock  Style="{DynamicResource NLargeStyle}"
                                Text="{Binding QueueService.Queue.Tracks.Count, StringFormat=/{0} tracks}"/>
                </StackPanel>

                <StackPanel Grid.Row="1" 
                            Margin="0, 6"
                            Orientation="Horizontal"
                            HorizontalAlignment="Right">
                    <customButton:IconButton Icon="{DynamicResource PlaylistLibrary}"
                                             Style="{DynamicResource FilledBtn}"
                                             Width="40"
                                             Height="40"
                                             IconStretch="Uniform"
                                            Command="{Binding SaveQueueAsPlaylistCommand}">
                    </customButton:IconButton>

                    <customButton:IconButton Icon="{DynamicResource Trash}"
                                            Width="40"
                                            Height="40"
                                         Style="{DynamicResource SmallDeleteButton}"
                                        Command="{Binding ClearQueueCommand}">
                    </customButton:IconButton>
                </StackPanel>
            </Grid>

            <!-- Queue Tracks -->
            <ListView x:Name="QueueTracks"
                      Grid.Row="1"
                            Style="{DynamicResource QueueListView}"
                      Loaded="QueueTracks_Loaded"
                      SelectionChanged="QueueTracks_SelectionChanged"
                          Margin="5, 0"
                          dd:DragDrop.IsDragSource="True"
                         dd:DragDrop.IsDropTarget="True"
                         dd:DragDrop.DropHandler="{Binding QueueService}"
                          dd:DragDrop.DropScrollingMode="VerticalOnly"
                          dd:DragDrop.DropTargetScrollViewer="{Binding ElementName=QueueTracks, Converter={StaticResource FindScrollViewerConverter}}"
                          dd:DragDrop.DropTargetAdornerBrush="{DynamicResource Primary}"
                          HorizontalAlignment="Stretch"
                        ItemsSource="{Binding QueueService.Queue.Tracks, UpdateSourceTrigger=PropertyChanged}"
                        SelectedItem="{Binding QueueService.Queue.PlayingQueueTrack, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                          ItemContainerStyle="{DynamicResource QueuePopupListViewItem}"
                        SelectionMode="Single">
                    <dd:DragDrop.EffectMoveAdornerTemplate>
                        <DataTemplate DataType="{x:Type model:OrderedTrack}">
                            <Border Background="{DynamicResource Background}"
                                    BorderBrush="{DynamicResource Outline}"
                                    BorderThickness="1"
                                   CornerRadius="{DynamicResource PrimaryCornerRadius}"
                                    Width="300">
                                <Grid Margin="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="60"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Border CornerRadius="{DynamicResource PrimaryCornerRadius}"
                                            Height="60"
                                            Width="60">
                                        <Border.Background>
                                            <ImageBrush ImageSource="{Binding Track, Converter={StaticResource ONullImageConverter}}"/>
                                        </Border.Background>
                                    </Border>

                                <!-- Title & Artists -->
                                <StackPanel HorizontalAlignment="Stretch"
                                                VerticalAlignment="Center"
                                                Margin="8,0"
                                                Grid.Column="1">

                                    <TextBlock Text="{Binding Track.Title}"
                                                   Style="{DynamicResource SStyle}"
                                                   MaxHeight="40"
                                                   HorizontalAlignment="Stretch"/>

                                    <ListView:TrackArtistsListView Artists="{Binding Track.TrackArtistRole}"
                                                                   Foreground="{DynamicResource OnBackground}"/>
                                </StackPanel>
                            </Grid>
                            </Border>
                        </DataTemplate>
                    </dd:DragDrop.EffectMoveAdornerTemplate>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <asyncImage:IsInViewportBorder x:Name="RootItemBorder"
                                                            Padding="2"
                                                           BackgroundPlaceholder="{DynamicResource PrimaryHover}"
                                                           Height="64"
                                                           PlaceholderHeight="64"
                                                            Background="Transparent">
                                <Border.InputBindings>
                                    <MouseBinding Gesture="RightClick"
                                                  Command="{Binding DataContext.OpenTrackPopupCommand, ElementName=RootQueuePopupView}"
                                                  CommandParameter="{Binding Track}"/>
                                </Border.InputBindings>
                                <Grid x:Name="RootItemGrid">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>   

                                    <customButton:IconButton Style="{DynamicResource QueueQuickPlayButton}"
                                                            Command="{Binding DataContext.PlayTrackCommand, ElementName=RootQueuePopupView}"
                                                             CommandParameter="{Binding Track}"
                                                             Visibility="Hidden"
                                                            Panel.ZIndex="2"
                                                            VerticalAlignment="Center"
                                                            HorizontalAlignment="Center"
                                                            x:Name="PlayBtn"/>
                                    <!-- Cover -->
                                    <asyncImage:AsyncImage CornerRadius="{DynamicResource PrimaryCornerRadius}"
                                                               Width="60"
                                                               Height="60"
                                                           CacheImage="True"
                                                               IsInViewport="False"
                                                               ImagePath="{Binding Track, Converter={StaticResource TNullImageConverter}}"
                                                               x:Name="CoverBorder">
                                        <asyncImage:AsyncImage.Placeholder>
                                            <Border ClipToBounds="True"
                                                        Background="{DynamicResource SecondaryContainer}"/>
                                        </asyncImage:AsyncImage.Placeholder>
                                    </asyncImage:AsyncImage>

                                    <!-- Title & Album -->
                                    <StackPanel HorizontalAlignment="Stretch"
                                                    VerticalAlignment="Top"
                                                ClipToBounds="false"
                                                    Margin="8,4"
                                                    Grid.Column="1">

                                        <TextBlock Text="{Binding Track.Title}"
                                                       Style="{DynamicResource SStyle}"
                                                       MaxHeight="40"
                                                       HorizontalAlignment="Stretch"/>

                                        <TextBlock Text="{Binding Track.Album.PrimaryArtist.Name}"
                                                       Style="{DynamicResource NLTrackDataStyle}"
                                                       MaxHeight="40"
                                                       HorizontalAlignment="Left">
                                            <TextBlock.InputBindings>
                                                <MouseBinding Gesture="LeftClick"
                                                                    Command="{Binding DataContext.NavigateToArtistCommand, ElementName=RootQueuePopupView}"
                                                                    CommandParameter="{Binding Track.Album.PrimaryArtistId}"/>
                                            </TextBlock.InputBindings>
                                        </TextBlock>
                                    </StackPanel>

                                <customButton:IconButton Style="{DynamicResource OpacityIconButton}"
                                                         Icon="{DynamicResource Delete}"
                                                         IconHeight="14"
                                                         IconWidth="14"
                                                         FillColor="{DynamicResource Error}"
                                                         Command="{Binding DataContext.RemoveTrackCommand, ElementName=RootQueuePopupView}"
                                                         CommandParameter="{Binding Track}"
                                                         Grid.Column="2"/>
                            </Grid>
                            </asyncImage:IsInViewportBorder>
                            <DataTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True" SourceName="RootItemBorder">
                                    <Setter Property="Opacity" Value="0.6" TargetName="CoverBorder"/>
                                    <Setter Property="Visibility" Value="Visible" TargetName="PlayBtn"/>
                            </Trigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

            <Border Background="{DynamicResource BlackGradient}"
                    IsHitTestVisible="False"
                    Grid.Row="1"
                    Height="10"
                    Opacity="0.8"
                    ClipToBounds="True"
                    VerticalAlignment="Top">
                <Border.OpacityMask>
                    <LinearGradientBrush  StartPoint="0,1"
                                          EndPoint="0,0">
                        <GradientStop Color="#00000000" Offset="0"/>
                        <GradientStop Color="#10000000" Offset="0.2"/>
                        <GradientStop Color="#25000000" Offset="0.4"/>
                        <GradientStop Color="#38000000" Offset="0.6"/>
                        <GradientStop Color="#5a000000" Offset="0.8"/>
                        <GradientStop Color="#5f000000" Offset="1"/>
                    </LinearGradientBrush>
                </Border.OpacityMask>
            </Border>

            <Border Style="{DynamicResource BottomBlackGradientBorder}"
                       Grid.Row="1"/>
        </Grid>
    </Border>
</UserControl>
