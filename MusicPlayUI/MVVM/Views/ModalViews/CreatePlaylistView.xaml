<UserControl x:Class="MusicPlayUI.MVVM.Views.ModalViews.CreatePlaylistView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MusicPlayUI.MVVM.Views" 
             xmlns:iconbutton="clr-namespace:IconButton;assembly=IconButton"
             xmlns:viewmodels="clr-namespace:MusicPlayUI.MVVM.ViewModels.ModalViewModels" 
             d:DataContext="{d:DesignInstance Type=viewmodels:CreatePlaylistViewModel}"
             xmlns:lang="clr-namespace:MusicPlay.Language;assembly=MusicPlay.Language"
             xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
             xmlns:card="clr-namespace:CustomCardControl;assembly=CustomCardControl"
             xmlns:customTextBox="clr-namespace:PlaceHolderTextBox;assembly=PlaceHolderTextBox"
             xmlns:textbtn="clr-namespace:TextBtn;assembly=TextBtn"
             mc:Ignorable="d" 
             x:Name="RootView"
             d:DesignHeight="800" d:DesignWidth="600">
    <Border x:Name="RootGrid"
          Width="500"
          Height="auto"
          CornerRadius="{DynamicResource SecondaryCornerRadius}"
          Background="{DynamicResource Background}">
          <Grid Margin="8">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="80"/>
                </Grid.RowDefinitions>

                <iconbutton:IconButton Style="{DynamicResource CloseModalBtn}"
                                       Command="{Binding CloseModalCommand}"/>

                <StackPanel Grid.Row="1"
                            MaxWidth="400"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Stretch">
                    <customTextBox:PlaceholderTextBox x:Name="NameBox"
                                                      Text="{Binding PlaylistName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                      Placeholder="{x:Static lang:Resources.Playlist_Name}"
                                                      MaxLength="50"
                                                      MinHeight="35">
                        <customTextBox:PlaceholderTextBox.Style>
                            <Style TargetType="customTextBox:PlaceholderTextBox"
                                   BasedOn="{StaticResource TextFieldStyle}">
                                <Setter Property="BorderBrush" Value="{DynamicResource OnBackground}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DataContext.IsNameValid, ElementName=RootView}"
                                                 Value="False">
                                        <Setter Property="BorderBrush" Value="{DynamicResource Error}"/>
                                    </DataTrigger>
                                    <Trigger Property="IsFocused" Value="True">
                                        <Setter Property="BorderBrush" Value="{DynamicResource Primary}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </customTextBox:PlaceholderTextBox.Style>
                    </customTextBox:PlaceholderTextBox>

                    <Border Height="30">
                        <TextBlock Text="{Binding Text.Length, ElementName=NameBox, StringFormat={}{0}/50, UpdateSourceTrigger=PropertyChanged}"
                                   HorizontalAlignment="Right"
                                   Margin="0,0,5,0"
                                   Foreground="{DynamicResource OnSurfaceVariant}"
                                   FontSize="14"/>
                    </Border>

                    <customTextBox:PlaceholderTextBox x:Name="DescriptionBox"
                                                        Text="{Binding PlaylistDescription, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                      Placeholder="{x:Static lang:Resources.Playlist_Description}"
                                                      AcceptsReturn="True"
                                                      MaxLength="250"
                                                      MaxHeight="200"
                                                      MaxLines="10"
                                                      MinHeight="35">
                        <customTextBox:PlaceholderTextBox.Style>
                            <Style TargetType="customTextBox:PlaceholderTextBox"
                                   BasedOn="{StaticResource TextFieldStyle}">
                                <Setter Property="BorderBrush" Value="{DynamicResource OnBackground}"/>
                                <Style.Triggers>
                                    <Trigger Property="IsFocused" Value="True">
                                        <Setter Property="BorderBrush" Value="{DynamicResource Primary}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </customTextBox:PlaceholderTextBox.Style>
                    </customTextBox:PlaceholderTextBox>

                    <Border Height="30">
                        <TextBlock Text="{Binding Text.Length, ElementName=DescriptionBox, StringFormat={}{0}/250, UpdateSourceTrigger=PropertyChanged}"
                                   HorizontalAlignment="Right"
                                   Margin="0,0,5,0"
                                   Foreground="{DynamicResource OnSurfaceVariant}"
                                   FontSize="14"/>
                    </Border>

                    <Grid HorizontalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>

                        <Border x:Name="coverBorder"
                                        Width="60"
                                        Height="60"
                                        Margin="0,0,20,0"
                                CornerRadius="{DynamicResource PrimaryCornerRadius}">
                            <Border.Background>
                                <ImageBrush ImageSource="{Binding PlaylistCover, Converter={StaticResource ONullImageConverter}}"
                                            Stretch="UniformToFill"/>
                            </Border.Background>
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="5" ShadowDepth="2" Opacity="0.6" Color="Black"/>
                            </Border.Effect>
                        </Border>

                    <card:CustomCardControl Style="{DynamicResource BaseCardStyle}"
                                                Grid.Column="1"
                                                Icon="{DynamicResource ImageIcon}"
                                                CardHeader="Pick a Cover"
                                                IconMargin="5,0"
                                            FillColor="{DynamicResource Secondary}"
                                            Background="{DynamicResource SecondaryHover}"
                                            Padding="0,0,5,0"
                                            Height="50"
                                                Command="{Binding SelectCoverCommand}"/>
                </Grid>

                </StackPanel>

                <textbtn:TextButton Grid.Row="2"
                                    Style="{DynamicResource EditBtn}"
                                    Command="{Binding CreatePlaylistCommand}"
                                    Visibility="{Binding IsCreate, Converter={StaticResource BoolToVisibilityConverterInverted}}"/>
            
                <textbtn:TextButton Grid.Row="2"
                                    Style="{DynamicResource CreateBtn}"
                                    Command="{Binding CreatePlaylistCommand}"
                                    Visibility="{Binding IsCreate, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=2}"/>

            </Grid>
    </Border>
</UserControl>
