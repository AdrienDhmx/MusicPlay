<UserControl x:Class="MusicPlayUI.MVVM.Views.ArtistView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:viewmodels="clr-namespace:MusicPlayUI.MVVM.ViewModels" 
             xmlns:iconbtn="clr-namespace:IconButton;assembly=IconButton"
             xmlns:lang="clr-namespace:MusicPlay.Language;assembly=MusicPlay.Language"
             xmlns:IconButton="clr-namespace:IconButton;assembly=IconButton" 
             xmlns:listviews="clr-namespace:MusicPlayUI.MVVM.Views.ListViews"
             xmlns:dd="urn:gong-wpf-dragdrop"
             xmlns:dropDown="clr-namespace:CardDropDown;assembly=CardDropDown"
             xmlns:model="clr-namespace:MusicPlayModels.MusicModels;assembly=MusicPlayModels"
             xmlns:helper="clr-namespace:MusicPlayUI.Core.Helpers"
             xmlns:listview="clr-namespace:MusicPlayUI.MVVM.Views.ListViews" xmlns:templates="clr-namespace:MusicPlayUI.MVVM.Views.Templates"
             d:DataContext="{d:DesignInstance Type=viewmodels:ArtistViewModel}"
             mc:Ignorable="d" 
             x:Name="RootView"
             d:DesignHeight="450" d:DesignWidth="800">

    <Grid helper:ScrollViewerHelper.IsStickyEnabled="True"
          helper:ScrollViewerHelper.ScrollViewer="{Binding ElementName=ArtistScroll}"
          helper:ScrollViewerHelper.StickyElement="{Binding ElementName=StickyPart}">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid x:Name="StickyPart"
                    MinHeight="130"
                  Height="220"
              Panel.ZIndex="2"
                  MaxHeight="220">
            <Border Background="{DynamicResource PrimaryContainer}">
                <Border.Effect>
                    <DropShadowEffect Color="Black"
                                          BlurRadius="6"
                                          ShadowDepth="3"
                                           Opacity="0.9"
                                          Direction="-20"/>
                </Border.Effect>
            </Border>
            <Grid HorizontalAlignment="Center"
                      Margin="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <!-- Artist Cover -->
                <Border Grid.RowSpan="2"
                            Margin="0,0,10,0"
                            MaxHeight="300"
                            CornerRadius="{Binding ActualWidth, RelativeSource={RelativeSource self}, Converter={StaticResource SizeConverter}, ConverterParameter='2'}"
                            Width="{Binding ActualHeight, RelativeSource={RelativeSource Mode=Self}}">
                    <Border.Background>
                        <ImageBrush ImageSource="{Binding Artist.Cover, Converter={StaticResource MNullImageConverter}, ConverterParameter=1}"
                                                Stretch="UniformToFill"/>
                    </Border.Background>
                </Border>

                <!-- Artist Name + Duration + More Opt Btn -->
                <Grid VerticalAlignment="Stretch"
                          HorizontalAlignment="Left"
                          MaxHeight="290"
                          Margin="0,6"
                            Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <!--  Artist Name -->
                    <TextBlock Text="{Binding Artist.Name}"
                                    TextWrapping="Wrap"
                                    TextTrimming="CharacterEllipsis"
                                        MaxWidth="{Binding ActualHeight, ElementName=ArtistScroll,Converter={StaticResource SizeConverter}, ConverterParameter=0.5}"
                                    HorizontalAlignment="Stretch"
                                    MaxHeight="{Binding ActualHeight, ElementName=StickyPart, Converter={StaticResource SizeConverter}, ConverterParameter=1.8}"
                                    Style="{DynamicResource SLargeHeaderStyle}"/>

                    <StackPanel Orientation="Horizontal"
                                    Margin="2,10"
                                        Grid.Row="1"
                                        HorizontalAlignment="Left">
                        <TextBlock Text="{Binding Artist.Duration}"
                                            Style="{DynamicResource NLargeSecondaryStyle}"/>

                        <TextBlock Text="{Binding Tracks.Count, StringFormat=- {0}}"
                                           Margin="5,0"
                                           Style="{DynamicResource NLargeSecondaryStyle}"/>

                        <TextBlock Text="{x:Static lang:Resources.Tracks}"
                                           Style="{DynamicResource NLargeSecondaryStyle}"/>

                    </StackPanel>
                    <!-- Play Buttons -->
                    <StackPanel Grid.Row="2"
                                    Grid.ColumnSpan="2"
                                    Style="{DynamicResource ArtistLargePlayBtnStackPanel}"
                                    Orientation="Horizontal">
                        <iconbtn:IconButton Command="{Binding PlayArtistCommand}"
                                                Style="{DynamicResource LargePlayButton}"/>

                        <iconbtn:IconButton Command="{Binding PlayArtistShuffledCommand}"
                                                                    Style="{DynamicResource LargePlayShuffleButton}"/>

                        <!-- More Option Button -->
                        <iconbtn:IconButton Style="{DynamicResource SmallBtn}"
                                               IconHeight="5"
                                                IconWidth="28"
                                                    Icon="{DynamicResource MoreOptionIcon}"
                                                    Margin="6,0"
                                                    Command="{Binding OpenArtistPopupCommand}"/>
                    </StackPanel>

                </Grid>

                <!-- Small Play Buttons -->
                <StackPanel Grid.Column="2"
                                Grid.RowSpan="2"
                                Style="{DynamicResource ArtistSmallPlayBtnStackPanel}"
                                Orientation="Horizontal">
                    <iconbtn:IconButton Command="{Binding PlayArtistCommand}"
                                            Style="{DynamicResource SmallPlayButton}"/>

                    <iconbtn:IconButton Command="{Binding PlayArtistShuffledCommand}"
                                            Style="{DynamicResource SmallPlayShuffleButton}"/>


                    <!-- More Option Button -->
                    <iconbtn:IconButton Style="{DynamicResource SmallBtn}"
                                                IconHeight="5"
                                                IconWidth="28"
                                                    Icon="{DynamicResource MoreOptionIcon}"
                                                    Margin="6,0"
                                                    Command="{Binding OpenArtistPopupCommand}"/>
                </StackPanel>
            </Grid>
        </Grid>

        <ScrollViewer x:Name="ArtistScroll"
                      VerticalScrollBarVisibility="Hidden"
                      Grid.Row="1">
            <Grid Margin="10,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <!-- Genres -->
                <listview:ChipListView Genres="{Binding Genres}"
                                       NavigateToGenreCommand="{Binding NavigateToGenreCommand}"
                                        Margin="0,10,0,0"
                                        VerticalAlignment="Center"
                                       HorizontalAlignment="Center"/>
                <!-- Albums -->
                <StackPanel Grid.Row="1">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MainAlbums.Count}"
                                                             Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>

                    <templates:ListHeaderTemplate Header="{Binding MainAlbumsHeader}"
                                                  HeaderCommand="{Binding ShowHideMainAlbumsCommand}"
                                                  ContentVisibility="{Binding MainAlbumsVisibility}"
                                                  PlayCommand="{Binding PlayAlbumsOnlyCommand}"
                                                  PlayShuffledCommand="{Binding PlayAlbumsOnlyCommand}"/>

                    <!-- Albums -->
                    <listviews:AlbumListView Albums="{Binding MainAlbums}"
                                             ShowArtist="false"
                                             Visibility="{Binding MainAlbumsVisibility}"
                                             Margin="30,5"/>
                </StackPanel>
                
                <!-- Singles & EP -->
                <StackPanel Grid.Row="2">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SinglesAndEP.Count}"
                                                             Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>

                    <templates:ListHeaderTemplate Header="{Binding SinglesAndEPHeader}"
                                                  HeaderCommand="{Binding ShowHideSinglesAndEPCommand}"
                                                  ContentVisibility="{Binding SinglesAndEPVisibility}"
                                                  PlayCommand="{Binding PlaySinglesAndEpCommand}"
                                                  PlayShuffledCommand="{Binding PlaySinglesAndEpCommand}"/>

                    <!-- Albums -->
                    <listviews:AlbumListView Albums="{Binding SinglesAndEP}"
                                             ShowArtist="false"
                                             Visibility="{Binding SinglesAndEPVisibility}"
                                             Margin="30,5"/>
                </StackPanel>

                <!-- Featured in Albums -->
                <StackPanel Grid.Row="3">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding FeaturedInAlbum.Count}"
                                                             Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>

                    <templates:ListHeaderTemplate Header="{Binding FeaturedInHeader}"
                                                  HeaderCommand="{Binding ShowHideFeaturedAlbumsCommand}"
                                                  ContentVisibility="{Binding FeaturedInAlbumsVisbility}"
                                                  PlayCommand="{Binding PlayFeaturedInAlbumsCommand}"
                                                  PlayShuffledCommand="{Binding PlayFeaturedInAlbumsCommand}"/>

                    <!-- Albums -->
                    <listviews:AlbumListView Albums="{Binding FeaturedInAlbum}"
                                             ShowArtist="false"
                                             Visibility="{Binding FeaturedInAlbumsVisbility}"
                                             Margin="30,5"/>
                </StackPanel>
                
                <!-- Composed Tracks -->
                <StackPanel Grid.Row="4">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ComposedTracks.Count}"
                                                             Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>

                    <templates:ListHeaderTemplate Header="{Binding ComposerOfHeader}"
                                                  HeaderCommand="{Binding ShowHideComposedTracksCommand}"
                                                  ContentVisibility="{Binding ComposedTracksVisibility}"
                                                  PlayCommand="{Binding PlayComposedTracksCommand}"
                                                  PlayShuffledCommand="{Binding PlayComposedTracksCommand}"/>

                    <listview:TrackListView TrackModels="{Binding ComposedTracks}"
                                            Visibility="{Binding ComposedTracksVisibility}"
                                            CoverVisibility="{Binding QueueService.AreCoversEnabled, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=2, Mode=OneWay}"/>
                </StackPanel>
                
                <!-- Performed Tracks -->
                <StackPanel Grid.Row="5">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding PerformedInTracks.Count}"
                                                             Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    
                    <templates:ListHeaderTemplate Header="{Binding PerformedInHeader}"
                                                  HeaderCommand="{Binding ShowHidePerformedTracksCommand}"
                                                  ContentVisibility="{Binding PerformedTracksVisibility}"
                                                  PlayCommand="{Binding PlayPerformedTracksCommand}"
                                                  PlayShuffledCommand="{Binding PlayPerformedTracksCommand}"/>

                    <listview:TrackListView TrackModels="{Binding PerformedInTracks}"
                                            Visibility="{Binding PerformedTracksVisibility}"
                                            CoverVisibility="{Binding QueueService.AreCoversEnabled, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=2, Mode=OneWay}"/>
                </StackPanel>

                <!-- Lyricist of Tracks -->
                <StackPanel Grid.Row="6">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding LyricistOfTracks.Count}"
                                                             Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    
                    <templates:ListHeaderTemplate Header="{Binding LyricistOfHeader}"
                                                  HeaderCommand="{Binding ShowHideLyricistTracksCommand}"
                                                  ContentVisibility="{Binding LyricistTracksVisiblity}"
                                                  PlayCommand="{Binding PlayLyricistOfTracksCommand}"
                                                  PlayShuffledCommand="{Binding PlayLyricistOfTracksCommand}"/>

                    <listview:TrackListView TrackModels="{Binding LyricistOfTracks}"
                                            Visibility="{Binding LyricistTracksVisiblity}"
                                            CoverVisibility="{Binding QueueService.AreCoversEnabled, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=2, Mode=OneWay}"/>
                </StackPanel>
            </Grid>
        </ScrollViewer>
    </Grid>
</UserControl>
