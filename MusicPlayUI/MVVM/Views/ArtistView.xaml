<UserControl x:Class="MusicPlayUI.MVVM.Views.ArtistView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:viewmodels="clr-namespace:MusicPlayUI.MVVM.ViewModels" 
             xmlns:iconbtn="clr-namespace:IconButton;assembly=IconButton"
             xmlns:lang="clr-namespace:MusicPlay.Language;assembly=MusicPlay.Language"
             xmlns:listviews="clr-namespace:MusicPlayUI.MVVM.Views.ListViews"
             xmlns:helper="clr-namespace:MusicPlayUI.Core.Helpers"
             xmlns:listview="clr-namespace:MusicPlayUI.MVVM.Views.ListViews" 
             xmlns:templates="clr-namespace:MusicPlayUI.MVVM.Views.Templates" xmlns:mathconv="clr-namespace:MusicPlayUI.Converters"
             d:DataContext="{d:DesignInstance Type=viewmodels:ArtistViewModel}"
             mc:Ignorable="d" 
             x:Name="RootView"
             d:DesignHeight="450" d:DesignWidth="800">

    <Grid helper:ScrollViewerHelper.IsStickyEnabled="True"
          helper:ScrollViewerHelper.ScrollViewer="{Binding ElementName=ArtistScroll}"
          helper:ScrollViewerHelper.StickyElement="{Binding ElementName=StickyPart}">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid x:Name="StickyPart"
              Panel.ZIndex="2"
                MinHeight="125"
                Height="200"
                MaxHeight="200">
            <Border Background="{DynamicResource Background}"
                    Effect="{DynamicResource PageHeaderDropShadow}"/>
            <Border Style="{DynamicResource PageHeaderBackground}"/>
            <Grid HorizontalAlignment="Stretch"
                Margin="20, 10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <Border Visibility="Hidden"
                            x:Name="BorderAnimationPercentage">
                    <Border.Opacity>
                        <!-- Map range the height of the sticky part to a 0 - 1 scale -->
                        <MultiBinding Converter="{mathconv:MathConverter}" ConverterParameter="(a - 125) / (200 - 125)">
                            <Binding ElementName="StickyPart" Path="ActualHeight"/>
                        </MultiBinding>
                    </Border.Opacity>
                </Border>

                <!-- Artist Cover -->
                <Border Grid.RowSpan="2"
                            Margin="0,0,18,0"
                            CornerRadius="{Binding ActualWidth, RelativeSource={RelativeSource self}, Converter={StaticResource SizeConverter}, ConverterParameter='2'}"
                            Width="{Binding ActualHeight, RelativeSource={RelativeSource Mode=Self}}">
                    <Border.Background>
                        <ImageBrush ImageSource="{Binding Artist.Cover, Converter={StaticResource MNullImageConverter}, ConverterParameter=1}"
                                                Stretch="UniformToFill"/>
                    </Border.Background>
                </Border>

                <!-- Artist Name + Duration + More Opt Btn -->
                <Grid VerticalAlignment="Top"
                          HorizontalAlignment="Stretch"
                          Margin="0, 6, 0, 0"
                      x:Name="GridArtistInfo"
                        Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <!--  Artist Name -->
                    <TextBlock Text="{Binding Artist.Name}"
                                    TextWrapping="Wrap"
                                    TextTrimming="CharacterEllipsis"
                                    HorizontalAlignment="Left"
                                    MaxHeight="{Binding ActualHeight, ElementName=StickyPart, Converter={StaticResource SizeConverter}, ConverterParameter=1.8}"
                                    Style="{DynamicResource SLargeHeaderStyle}"/>
                </Grid>

                <Border Visibility="Hidden"
                            MinWidth="50"
                            x:Name="BorderButtonWidthValue">
                    <Border.Width>
                        <MultiBinding Converter="{mathconv:MathConverter}" ConverterParameter="80 * a + 48">
                            <Binding ElementName="BorderAnimationPercentage" Path="Opacity"/>
                        </MultiBinding>
                    </Border.Width>
                </Border>

                <!-- Action Buttons -->
                <Border VerticalAlignment="Bottom"
                        Grid.Column="1"
                            MaxWidth="{Binding ActualWidth, ElementName=GridArtistInfo}"
                            MinWidth="50"
                            HorizontalAlignment="Left">
                    <Border.Width>
                        <MultiBinding Converter="{mathconv:MathConverter}" ConverterParameter="(1 - a) * b + 340">
                            <Binding ElementName="BorderAnimationPercentage" Path="Opacity"/>
                            <Binding ElementName="GridArtistInfo" Path="ActualWidth"/>
                        </MultiBinding>
                    </Border.Width>

                    <StackPanel Orientation="Horizontal"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Right">
                        <iconbtn:IconButton Command="{Binding PlayArtistCommand}"
                                                                        Style="{DynamicResource LargePlayButton}"
                                                Width="{Binding Width, ElementName=BorderButtonWidthValue}">
                        </iconbtn:IconButton>

                        <iconbtn:IconButton Command="{Binding PlayArtistShuffledCommand}"
                                                                        Style="{DynamicResource LargePlayShuffleButton}"
                                                 Width="{Binding Width, ElementName=BorderButtonWidthValue}">
                        </iconbtn:IconButton>

                        <!-- More Option Button -->
                        <iconbtn:IconButton Style="{DynamicResource SmallBtn}"
                                                    IconHeight="5"
                                                    IconWidth="28"
                                                        Icon="{DynamicResource MoreOptionIcon}"
                                                        Margin="6,0"
                                                        Command="{Binding OpenArtistPopupCommand}"
                                                    CommandParameter="{Binding Artist}"/>
                    </StackPanel>
                </Border>
            </Grid>
        </Grid>

        <ScrollViewer x:Name="ArtistScroll"
                      VerticalScrollBarVisibility="Hidden"
                      Grid.Row="1">
            <Grid Margin="10,0"
                  x:Name="ContentGrid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <!-- Genres -->
                <listview:ChipListView Genres="{Binding Genres}"
                                       NavigateToGenreCommand="{Binding NavigateToGenreCommand}"
                                        Margin="0,10,0,0"
                                        VerticalAlignment="Center"
                                       HorizontalAlignment="Center"/>

                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" >
                        </ColumnDefinition>
                        <ColumnDefinition MinWidth="250" Width="0.2*"/>
                    </Grid.ColumnDefinitions>

                    <templates:TextPreviewTemplate Text="{Binding Biography}"
                                                   Visibility="{Binding Biography, Converter={StaticResource EmptyTextToVisibilityConverter}}"
                                                    Margin="25, 15">
                        <templates:TextPreviewTemplate.Width>
                            <MultiBinding Converter="{mathconv:MathConverter}" ConverterParameter="a - 320">
                                <Binding ElementName="ContentGrid" Path="ActualWidth"/>
                            </MultiBinding>
                        </templates:TextPreviewTemplate.Width>
                    </templates:TextPreviewTemplate>


                    <Grid Margin="2,10, 25, 10"
                          HorizontalAlignment="Center"
                            Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="150"/>
                            <ColumnDefinition Width="80"/>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" MinHeight="28"/>
                            <RowDefinition Height="auto" MinHeight="28"/>
                        </Grid.RowDefinitions>

                        <TextBlock Text="Track count"
                                    FontWeight="SemiBold"
                                        Style="{DynamicResource NLargeSecondaryStyle}"/>

                        <TextBlock Text="{Binding Tracks.Count}"
                                   Grid.Column="1"
                                    Style="{DynamicResource NLargeSecondaryStyle}"/>


                        <TextBlock Text="Length"
                                   Grid.Row="1"
                                    FontWeight="SemiBold"
                                    Style="{DynamicResource NLargeSecondaryStyle}"/>

                        <TextBlock Text="{Binding Artist.Duration}"
                                   Grid.Row="1"
                                    Grid.Column="1"
                                    Style="{DynamicResource NLargeSecondaryStyle}"/>
                    </Grid>
                </Grid>


                <!-- Albums -->
                <StackPanel Grid.Row="2">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MainAlbums.Count}"
                                                             Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>

                    <templates:ListHeaderTemplate Header="{Binding MainAlbumsHeader}"
                                                  HeaderCommand="{Binding ShowHideMainAlbumsCommand}"
                                                  ContentVisibility="{Binding MainAlbumsVisibility}"
                                                  PlayCommand="{Binding PlayAlbumsOnlyCommand}"
                                                  PlayShuffledCommand="{Binding PlayAlbumsOnlyCommand}"/>

                    <!-- Albums -->
                    <listviews:AlbumListView Albums="{Binding MainAlbums}"
                                             ShowArtist="false"
                                             Visibility="{Binding MainAlbumsVisibility}"
                                             Margin="30,5"/>
                </StackPanel>
                
                <!-- Singles & EP -->
                <StackPanel Grid.Row="3">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SinglesAndEP.Count}"
                                                             Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>

                    <templates:ListHeaderTemplate Header="{Binding SinglesAndEPHeader}"
                                                  HeaderCommand="{Binding ShowHideSinglesAndEPCommand}"
                                                  ContentVisibility="{Binding SinglesAndEPVisibility}"
                                                  PlayCommand="{Binding PlaySinglesAndEpCommand}"
                                                  PlayShuffledCommand="{Binding PlaySinglesAndEpCommand}"/>

                    <!-- Albums -->
                    <listviews:AlbumListView Albums="{Binding SinglesAndEP}"
                                             ShowArtist="false"
                                             Visibility="{Binding SinglesAndEPVisibility}"
                                             Margin="30,5"/>
                </StackPanel>

                <!-- Featured in Albums -->
                <StackPanel Grid.Row="4">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding FeaturedInAlbum.Count}"
                                                             Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>

                    <templates:ListHeaderTemplate Header="{Binding FeaturedInHeader}"
                                                  HeaderCommand="{Binding ShowHideFeaturedAlbumsCommand}"
                                                  ContentVisibility="{Binding FeaturedInAlbumsVisbility}"
                                                  PlayCommand="{Binding PlayFeaturedInAlbumsCommand}"
                                                  PlayShuffledCommand="{Binding PlayFeaturedInAlbumsCommand}"/>

                    <!-- Albums -->
                    <listviews:AlbumListView Albums="{Binding FeaturedInAlbum}"
                                             ShowArtist="false"
                                             Visibility="{Binding FeaturedInAlbumsVisbility}"
                                             Margin="30,5"/>
                </StackPanel>
                
                <!-- Composed Tracks -->
                <StackPanel Grid.Row="5">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ComposedTracks.Count}"
                                                             Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>

                    <templates:ListHeaderTemplate Header="{Binding ComposerOfHeader}"
                                                  HeaderCommand="{Binding ShowHideComposedTracksCommand}"
                                                  ContentVisibility="{Binding ComposedTracksVisibility}"
                                                  PlayCommand="{Binding PlayComposedTracksCommand}"
                                                  PlayShuffledCommand="{Binding PlayComposedTracksCommand}"/>

                    <!--<listview:TrackListView TrackModels="{Binding ComposedTracks}"
                                            Visibility="{Binding ComposedTracksVisibility}"
                                            CoverVisibility="{Binding QueueService.AreCoversEnabled, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=2, Mode=OneWay}"/>-->
                </StackPanel>
                
                <!-- Performed Tracks -->
                <StackPanel Grid.Row="6">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding PerformedInTracks.Count}"
                                                             Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    
                    <templates:ListHeaderTemplate Header="{Binding PerformedInHeader}"
                                                  HeaderCommand="{Binding ShowHidePerformedTracksCommand}"
                                                  ContentVisibility="{Binding PerformedTracksVisibility}"
                                                  PlayCommand="{Binding PlayPerformedTracksCommand}"
                                                  PlayShuffledCommand="{Binding PlayPerformedTracksCommand}"/>

                    <!--<listview:TrackListView TrackModels="{Binding PerformedInTracks}"
                                            Visibility="{Binding PerformedTracksVisibility}"
                                            CoverVisibility="{Binding QueueService.AreCoversEnabled, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=2, Mode=OneWay}"/>-->
                </StackPanel>

                <!-- Lyricist of Tracks -->
                <StackPanel Grid.Row="7">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding LyricistOfTracks.Count}"
                                                             Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    
                    <templates:ListHeaderTemplate Header="{Binding LyricistOfHeader}"
                                                  HeaderCommand="{Binding ShowHideLyricistTracksCommand}"
                                                  ContentVisibility="{Binding LyricistTracksVisiblity}"
                                                  PlayCommand="{Binding PlayLyricistOfTracksCommand}"
                                                  PlayShuffledCommand="{Binding PlayLyricistOfTracksCommand}"/>

                    <!--<listview:TrackListView TrackModels="{Binding LyricistOfTracks}"
                                            Visibility="{Binding LyricistTracksVisiblity}"
                                            CoverVisibility="{Binding QueueService.AreCoversEnabled, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=2, Mode=OneWay}"/>-->
                </StackPanel>
            </Grid>
        </ScrollViewer>
    </Grid>
</UserControl>
