<UserControl x:Class="MusicPlayUI.MVVM.Views.SettingsViews.VisualizerSettingTemplateView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MusicPlayUI.MVVM.Views.SettingsViews"
             mc:Ignorable="d" 
            x:Name="TemplateRoot"
             xmlns:lang="clr-namespace:MusicPlay.Language;assembly=MusicPlay.Language" 
             xmlns:settingsviewmodel="clr-namespace:MusicPlayUI.MVVM.ViewModels.SettingsViewModels" 
             xmlns:cardexpander="clr-namespace:CardDropDown;assembly=CardDropDown" 
             xmlns:colorPicker="clr-namespace:ColorCanvas;assembly=ColorCanvas" 
             xmlns:stepper="clr-namespace:Stepper;assembly=Stepper"
             d:DataContext="{d:DesignInstance Type=settingsviewmodel:VisualizerSettingViewModel}"
             d:DesignHeight="1000" d:DesignWidth="800">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- data quantities -->
        <cardexpander:CardDropDown Icon="{DynamicResource DataQuantity}"
                                           Foreground="{DynamicResource OnBackground}"
                                           Margin="5,2"
                                            Background="Transparent"
                                           BorderThickness="1.5"
                                            BorderBrush="{DynamicResource Primary}"
                                           FontSize="18"
                                           FontWeight="DemiBold"
                                           Header="{x:Static lang:Resources.VDataQuantity}"
                                               Applied="{Binding AppliedDataQt}">
            <Border Margin="20,0">
                <ItemsControl ItemsSource="{Binding DataQuantities}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border Background="Transparent"
                                            x:Name="ItemBorder"
                                            Height="40">
                                <Border.InputBindings>
                                    <MouseBinding Gesture="LeftClick" Command="{Binding DataContext.UpdateDataQuantityCommand, Source={x:Reference TemplateRoot}}"
                                                  CommandParameter="{Binding .}"/>
                                </Border.InputBindings>
                                <Grid Margin="5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="25"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <CheckBox x:Name="IsSelectedCheckBox"
                                                          IsHitTestVisible="False"
                                                      Style="{DynamicResource SettingsCheckBox}"
                                                     IsChecked="{Binding IsSelected, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <TextBlock Text="{Binding Name}"
                                                       Grid.Column="1"
                                                       x:Name="SettingName">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock"
                                                               BasedOn="{StaticResource NStyle}">
                                                <Setter Property="Foreground" Value="{DynamicResource OnBackground}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsChecked, ElementName=IsSelectedCheckBox, UpdateSourceTrigger=PropertyChanged}"
                                                                 Value="true">
                                                        <Setter Property="Foreground" Value="{DynamicResource Primary}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>

                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Border>
        </cardexpander:CardDropDown>

        <!-- data representations -->
        <cardexpander:CardDropDown Icon="{DynamicResource BarGraphIcon}"
                                           Foreground="{DynamicResource OnBackground}"
                                           Margin="5,2"
                                               Grid.Row="1"
                                            Background="Transparent"
                                           BorderThickness="1.5"
                                            BorderBrush="{DynamicResource Primary}"
                                           FontSize="18"
                                           FontWeight="DemiBold"
                                           Header="{x:Static lang:Resources.VRepresentation}"
                                               Applied="{Binding AppliedRepresentation}">
            <Border Margin="20,0">
                <ItemsControl ItemsSource="{Binding DataRepresentations}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border Background="Transparent"
                                            x:Name="ItemBorder"
                                            Height="40">
                                <Border.InputBindings>
                                    <MouseBinding Gesture="LeftClick" Command="{Binding DataContext.UpdateDataRepresentationCommand, Source={x:Reference TemplateRoot}}"
                                                  CommandParameter="{Binding .}"/>
                                </Border.InputBindings>
                                <Grid Margin="5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="25"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <CheckBox x:Name="IsSelectedCheckBox"
                                                          IsHitTestVisible="False"
                                                      Style="{DynamicResource SettingsCheckBox}"
                                                     IsChecked="{Binding IsSelected, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <TextBlock Text="{Binding Name}"
                                                       Grid.Column="1"
                                                       x:Name="SettingName">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock"
                                                               BasedOn="{StaticResource NStyle}">
                                                <Setter Property="Foreground" Value="{DynamicResource OnBackground}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsChecked, ElementName=IsSelectedCheckBox, UpdateSourceTrigger=PropertyChanged}"
                                                                 Value="true">
                                                        <Setter Property="Foreground" Value="{DynamicResource Primary}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>

                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Border>

        </cardexpander:CardDropDown>

        <!-- objects lengths -->
        <cardexpander:CardDropDown Icon="{DynamicResource MeasureIcon}"
                                           Foreground="{DynamicResource OnBackground}"
                                           Margin="5,2"
                                               Grid.Row="2"
                                            Background="Transparent"
                                           BorderThickness="1.5"
                                            BorderBrush="{DynamicResource Primary}"
                                           FontSize="18"
                                           FontWeight="DemiBold"
                                           Header="{x:Static lang:Resources.VObjectLength}"
                                               Applied="{Binding AppliedObjectLength}">
            <Border Margin="20,0">
                <ItemsControl ItemsSource="{Binding ObjectLengths}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border Background="Transparent"
                                            x:Name="ItemBorder"
                                            Height="40">
                                <Border.InputBindings>
                                    <MouseBinding Gesture="LeftClick" Command="{Binding DataContext.UpdateObjectsLengthCommand, Source={x:Reference TemplateRoot}}"
                                                  CommandParameter="{Binding .}"/>
                                </Border.InputBindings>
                                <Grid Margin="5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="25"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <CheckBox x:Name="IsSelectedCheckBox"
                                                          IsHitTestVisible="False"
                                                      Style="{DynamicResource SettingsCheckBox}"
                                                     IsChecked="{Binding IsSelected, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <TextBlock Text="{Binding Name}"
                                                       Grid.Column="1"
                                                       x:Name="SettingName">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock"
                                                               BasedOn="{StaticResource NStyle}">
                                                <Setter Property="Foreground" Value="{DynamicResource OnBackground}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsChecked, ElementName=IsSelectedCheckBox, UpdateSourceTrigger=PropertyChanged}"
                                                                 Value="true">
                                                        <Setter Property="Foreground" Value="{DynamicResource Primary}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Border>

        </cardexpander:CardDropDown>

        <!-- refresh rates -->
        <cardexpander:CardDropDown Icon="{DynamicResource 60FPSIcon}"
                                           Foreground="{DynamicResource OnBackground}"
                                           Margin="5,2"
                                               Grid.Row="3"
                                            Background="Transparent"
                                           BorderThickness="1.5"
                                            BorderBrush="{DynamicResource Primary}"
                                           FontSize="18"
                                           FontWeight="DemiBold"
                                           Header="{x:Static lang:Resources.RefreshRate}"
                                               Applied="{Binding AppliedRefreshRate}">
            <Border Margin="20,0">
                <ItemsControl ItemsSource="{Binding RefreshRates}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border Background="Transparent"
                                                x:Name="ItemBorder"
                                                Height="40">
                                <Border.InputBindings>
                                    <MouseBinding Gesture="LeftClick" Command="{Binding DataContext.UpdateRefreshRateCommand, Source={x:Reference TemplateRoot}}"
                                                  CommandParameter="{Binding .}"/>
                                </Border.InputBindings>
                                <Grid Margin="5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="25"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <CheckBox x:Name="IsSelectedCheckBox"
                                                          IsHitTestVisible="False"
                                                      Style="{DynamicResource SettingsCheckBox}"
                                                     IsChecked="{Binding IsSelected, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>

                                    <TextBlock Text="{Binding Name}"
                                                       Grid.Column="1"
                                                       x:Name="SettingName">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock"
                                                               BasedOn="{StaticResource NStyle}">
                                                <Setter Property="Foreground" Value="{DynamicResource OnBackground}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsChecked, ElementName=IsSelectedCheckBox, UpdateSourceTrigger=PropertyChanged}"
                                                                 Value="true">
                                                        <Setter Property="Foreground" Value="{DynamicResource Primary}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Border>
        </cardexpander:CardDropDown>

        <StackPanel Grid.Row="4"
                                Orientation="Vertical"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center">

            <!-- Color -->
            <StackPanel Orientation="Vertical"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                <TextBlock Style="{DynamicResource SStyle}"
                                       HorizontalAlignment="Center"
                                       FontSize="24"
                                        Text="{x:Static lang:Resources.Color}"/>

                <CheckBox Style="{DynamicResource SettingsCheckBox}"
                                        HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          IsChecked="{Binding VisualizerParameter.AutoColor}"
                                          Margin="0,8"
                                          Content="{x:Static lang:Resources.Auto}"/>

                <colorPicker:ColorCanvas SelectedColor="{Binding VisualizerParameter.ObjectColor, Converter={StaticResource BrushToColorConverter}}"
                                                     Background="{DynamicResource Background}"
                                                     BorderThickness="1"
                                                     PrimaryColor="{DynamicResource Primary}"
                                         Foreground="{DynamicResource OnBackground}"
                                                     SecondaryColor="{DynamicResource PrimaryHover}"
                                                     BorderBrush="{DynamicResource Secondary}"
                                                     UsingAlphaChannel="False">
                </colorPicker:ColorCanvas>
            </StackPanel>


            <CheckBox Style="{DynamicResource SettingsCheckBox}"
                                        HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          IsChecked="{Binding VisualizerParameter.Gradient}"
                                      Content="{x:Static lang:Resources.Gradient}"
                                          Margin="0,10,10,10"/>

            <CheckBox Style="{DynamicResource SettingsCheckBox}"
                                HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    IsChecked="{Binding VisualizerParameter.Fill}"
                                    Content="{x:Static lang:Resources.Fill}"
                                    Margin="0,0,10,0"/>

            <CheckBox Style="{DynamicResource SettingsCheckBox}"
                                        HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            IsChecked="{Binding VisualizerParameter.CenterFreq}"
                                      Content="{x:Static lang:Resources.VCenterFreq}"
                                            Margin="0,0,10,10"/>

            <CheckBox Style="{DynamicResource SettingsCheckBox}"
                                    HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        IsChecked="{Binding VisualizerParameter.CutHigherFreq}"
                                        Margin="0,0,10,0"
                                      Content="{x:Static lang:Resources.VCutFreq}"/>

            <StackPanel Orientation="Vertical"
                                    Margin="0,5, 0, 15"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                <TextBlock FontSize="22"
                                        FontWeight="Medium"
                                        Text="{x:Static lang:Resources.VCutPercentage}" />

                <stepper:Stepper Background="{DynamicResource Background}"
                                             BorderBrush="{DynamicResource OnBackground}"
                                             BorderThickness="1"
                                             CornerRadius="4"
                                             Margin="5,5,5,0"
                                             Foreground="{DynamicResource OnSecondaryContainer}"
                                             Height="30"
                                             VerticalContentAlignment="Center"
                                             HorizontalContentAlignment="Left"
                                             Unit="%"
                                             FontSize="16"
                                             PlaceholderForeground="{DynamicResource OnSurfaceVariant}"
                                             Placeholder="0 - 100"
                                             BtnBackgroundColor="Transparent"
                                             MouseOverBtnColor="{DynamicResource PrimaryHover}"
                                             StepValue="5"
                                             Min="0"
                                             Max="100"
                                             HorizontalAlignment="Center"
                                             Value="{Binding VisualizerParameter.CutPercentage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                </stepper:Stepper>
            </StackPanel>
        </StackPanel>
    </Grid>
</UserControl>
