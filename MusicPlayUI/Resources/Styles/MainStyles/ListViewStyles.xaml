<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ds="clr-namespace:DynamicScrollViewer;assembly=DynamicScrollViewer"
                    xmlns:vcontrol="clr-namespace:VirtualizingControls;assembly=VirtualizingControls">

    <Style x:Key="LyricsListView" TargetType="{x:Type ListView}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListView}">
                    <Grid>
                        <ItemsPresenter />
                    </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    
    <Style x:Key="QueueListViewItem" TargetType="{x:Type ListViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Border"
                            Margin="0"
                            Padding="4"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            CornerRadius="5"
                            BorderBrush="Transparent">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ScdWhiteTransparent}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource WhiteTransparent}"/>
                            <Setter Property="BorderThickness" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="QueuePopupListViewItem" TargetType="{x:Type ListViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Border"
                            Margin="0, 2"
                        Background="{TemplateBinding Background}"
                            HorizontalAlignment="Stretch"
                        BorderThickness="0"
                        CornerRadius="5"
                        BorderBrush="{DynamicResource Primary}">
                        <ContentPresenter TextElement.Foreground="{DynamicResource OnBackground}"
                                          x:Name="item"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" TargetName="Border"  Value="{DynamicResource PrimaryHover}"/>
                            <Setter Property="BorderThickness" TargetName="Border"  Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="QueueListView" TargetType="{x:Type ListView}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <ds:DynamicScrollViewer
                                x:Name="PART_ContentHost"
                                StartingVerticalOffset="{Binding DataContext.State.ScrollOffset, Mode=OneTime, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"
                                EnableLazyLoading="True"
                                OnScrollCommand="{Binding DataContext.OnScrollCommand, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"
                                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                ItemToKeepInView="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}">
                        <StackPanel Orientation="Vertical"
                                        IsItemsHost="True"
                                        HorizontalAlignment="Stretch"/>
                    </ds:DynamicScrollViewer>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource QueueListViewItem}" TargetType="{x:Type ListViewItem}" />
    <Style BasedOn="{StaticResource QueueListView}" TargetType="{x:Type ListView}" />

    <Style x:Key="LibraryItemsControl" TargetType="ItemsControl">
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                    <!--<WrapPanel HorizontalAlignment="Center"
                               VerticalAlignment="Stretch"/>-->
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ItemsControl}">
                    <ScrollViewer HorizontalScrollBarVisibility="Hidden"
                                  VerticalScrollBarVisibility="Disabled">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" 
                                        VerticalAlignment="Stretch"/>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VLibraryItemsControl" TargetType="vcontrol:VirtualizingItemsControl">
        <Setter Property="VirtualizingPanel.IsContainerVirtualizable" Value="True"/>
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
        <Setter Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="True"/>
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>
        <Setter Property="VirtualizingPanel.CacheLengthUnit" Value="Item"/>
        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="CacheLengthUnit" Value="Item"/>
        <Setter Property="CacheLength" Value="16"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <vcontrol:VirtualizingWrapPanel ScrollViewer.VerticalScrollBarVisibility="Visible"
                                                   VirtualizingPanel.IsVirtualizing="True"
                                                   VirtualizingPanel.VirtualizationMode="Recycling"
                                                   VirtualizingPanel.CacheLengthUnit="Item"
                                                    VirtualizingPanel.CacheLength="16"
                                                   VirtualizingPanel.IsContainerVirtualizable="True"
                                                   VirtualizingPanel.ScrollUnit="Pixel"
                                                    SpacingMode="StartAndEndOnly"
                                                    StretchItems="False"
                                                    VerticalAlignment="Top"
                                                    HorizontalAlignment="Center"
                                                    Orientation="Vertical"
                                                    MouseWheelDelta="16"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ItemsControl}">
                    <ScrollViewer
                            CanContentScroll="True"
                            HorizontalScrollBarVisibility="Disabled"
                            VerticalScrollBarVisibility="Visible">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                        HorizontalAlignment="Center"/>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>